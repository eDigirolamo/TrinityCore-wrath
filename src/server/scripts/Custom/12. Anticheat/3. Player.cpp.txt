1. src/server/game/Entities/Player/Player.cpp
1.1 Agregar:
#include "Player.h"
#include "AccountMgr.h"
#include "AchievementMgr.h"
+#include "AnticheatMgr.h"
#include "ArenaTeam.h"
#include "ArenaTeamMgr.h"
#include "Bag.h"

2. src/server/game/Entities/Player/Player.cpp
2.1 Agregar:
#include "CombatPackets.h"
#include "Common.h"
#include "ConditionMgr.h"
+#include "Config.h"
#include "CreatureAI.h"
#include "DatabaseEnv.h"
#include "DisableMgr.h"

3. src/server/game/Entities/Player/Player.cpp
3.1 Agregar:
    m_bCanDelayTeleport = false;
    m_bHasDelayedTeleport = false;
    m_teleport_options = 0;
-
+    m_canTeleport = false;
    m_trade = nullptr;

    m_cinematic = 0;

4. src/server/game/Entities/Player/Player.cpp
4.1 Agregar:
        SetSemaphoreTeleportNear(true);
        // near teleport, triggering send MSG_MOVE_TELEPORT_ACK from client at landing
        if (!GetSession()->PlayerLogout())
+        {
+            SetCanTeleport(true);
            SendTeleportPacket(m_teleport_dest, (options & TELE_TO_TRANSPORT_TELEPORT) != 0);
+        }
    }
    else
    {

5. src/server/game/Entities/Player/Player.cpp
5.1 Agregar:
            if (!GetSession()->PlayerLogout())
            {
+                SetCanTeleport(true);
                WorldPacket data(SMSG_NEW_WORLD, 4 + 4 + 4 + 4 + 4);
                data << uint32(mapid);
                if (GetTransport())

6. src/server/game/Entities/Player/Player.cpp
6.1 Agregar:
    if (m_session->isLogingOut() || !sWorld->getBoolConfig(CONFIG_STATS_SAVE_ONLY_ON_LOGOUT))
        _SaveStats(trans);

+    // we save the data here to prevent spamming
+    sAnticheatMgr->SavePlayerData(this);
+
+    // in this way we prevent to spam the db by each report made!
+    // sAnticheatMgr->SavePlayerData(this);
+
    // save pet (hunter pet level and experience and all type pets health/mana).
    if (Pet* pet = GetPet())
        pet->SavePetToDB(PET_SAVE_AS_CURRENT);