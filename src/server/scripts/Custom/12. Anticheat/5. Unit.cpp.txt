1. src/server/game/Entities/Unit/Unit.cpp
1.1 Agregar:
    float newSpeedFlat = rate * (IsControlledByPlayer() ? playerBaseMoveSpeed[mtype] : baseMoveSpeed[mtype]);
    if (IsMovedByClient() && IsInWorld())
+    {
        MovementPacketSender::SendSpeedChangeToMover(this, mtype, newSpeedFlat);
+        // To prevent false positives in the Anticheat system
+        if (GetTypeId() == TYPEID_PLAYER)
+        {
+            ToPlayer()->SetCanTeleport(true);
+        }
+    }
    else if (IsMovedByClient() && !IsInWorld()) // (1)
        SetSpeedRateReal(mtype, rate);
    else // <=> if(!IsMovedByPlayer())

2. src/server/game/Entities/Unit/Unit.cpp
2.1 Agregar:
        return;

    GetVehicleBase()->RemoveAurasByType(SPELL_AURA_CONTROL_VEHICLE, GetGUID());
+    if (Player* player = ToPlayer())
+    {
+        player->SetCanTeleport(true);
+    }
    //! The following call would not even be executed successfully as the
    //! SPELL_AURA_CONTROL_VEHICLE unapply handler already calls _ExitVehicle without
    //! specifying an exitposition. The subsequent call below would return on if (!m_vehicle).